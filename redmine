#!/bin/bash

# override defaults
if [ $# -eq 0 ]; then
    echo -e "Usage: $0 <vault file> \n"
	echo -e "\nVault file example:"
	cat >&1 << eof
  # vault yaml file
  # remote login node
  loginhost: 123.45.xxx.xxx
  loginport: 22
  loginuser: yourname
  loginpass: password
  # redmine server
  server: 10.10.1.2
  # local forward server:80
  local_ip: 127.0.0.1
  local_forward: 8080
eof
    echo -e "Vault file location:\n    ~/.vault/"
	exit 0
fi

. functions

cmdline="$0 $*"

conf="redmine.json"
vault="$(basename $1)"
# create conf
conf=$(python helper.py $conf genconf $vault) || exit -127
# conf created in ~/
#echo $conf

for x in $(python helper.py $conf info |grep -v "^SSH\ Host"|grep "^[a-zA-Z_]"|awk '{print $2}'|cut -d ":" -f 1 |uniq); do
  ip a s |grep -w "^[[:space:]]*inet $x" &>/dev/null
  [ $? -eq 0 ] || { echo -e "ERROR: IP ADDR $x not found."; exit 1; }
done

echo -e "\033[31mNOTE: If it's stuck for 30 seconds you can press Ctrl+C and rerun it.\033[0m"
echo -e "------------------------------------------------------------------------------"
python helper.py $conf info
echo -e "------------------------------------------------------------------------------"

redmine=$(python helper.py $conf info |grep ^redmine|awk '{print $2}')

while true; do
    # Kill the processes that is already running
    searchprocess="$(basename $0) $1"
	for x in $(ps -ef |grep "$searchprocess" |grep -v grep | awk '{print $2}'); do
        if [ "$x" != "$$" ]; then
              kill $x &>/dev/null
        fi
    done

    kill_ipport $redmine

    # ssh connect
    cat << eof1 |expect -f - &
$(python helper.py $conf expect)
eof1
    wait_ipport $redmine

    N=$(ps -ef |grep -E "$redmine" |grep -v grep |wc -l)
	if [ $N -eq 1 ]; then
        echo -e "\nYou can browse http://$redmine\nDone."
        detect_page_endless http://$redmine redmine
        echo "$(date) $$ rerun program: /bin/bash $cmdline"
        exec /bin/bash $cmdline
	fi
	echo "...................................."
done
